import { Row, Col } from "react-bootstrap";
import { Card } from "../../components/Elements/index";
import circuit from "./circuit.png";
import { GateMenu } from "./Quantum/index";

export function Home() {
  const body = {
    comment: "no_button",
    type: "maximize",
    objective: "x",
    constraints: ["x <= 1"],
    circuitDepth: "p = 1",
  };

  return (
    <>
      <section id="container-section" className="container">
        <h3>
          Quantum Algorithm <small className="text-muted">QAOA</small>
        </h3>
        <p>
          The Quantum Approximate Optimization Algorithm (
          <a href="https://arxiv.org/pdf/1411.4028.pdf">QAOA</a>) is a quantum
          algorithm that can be used to find approximate solutions to
          combinatorial optimization problems. It is a variational algorithm,
          meaning that it uses both a classical computer and a quantum computer
          through a process which is a discretization of quantum annealing,
          whose goal is to find the minimum of a function.
        </p>
        <h3>Quantum Gates</h3>
        <p>
          QAOA uses a sequence of quantum gates to approximate the solution to a
          combinatorial optimization problem. The gates used in this algorithm
          are the Hadamard gate, RX and RZZ gates. There are explanations and visualizations of
          these gates and other quantum gates below. Images generated by{" "}
          <a href="https://quantum-computing.ibm.com/composer/f">IBM</a>. 
        </p>
        <GateMenu />
      </section>
    </>
  );
}
